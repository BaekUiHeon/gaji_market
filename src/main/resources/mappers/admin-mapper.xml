<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
		
	<select id="getetInfacePurchaseList">	<!-- 33P 직거래 조회(관리자) -->
		select goods_id,(select user_id seller_id,goods_title from goods g where g.goods_id=i.goods_id),buyer_id 
		from in_face_trading i
		order by trading_date desc
	</select>
	
	<select id="getSearchTitleInfacePurchaseList" parameterType="string">	<!-- 33P 직거래 조회 상품명(관리자) -->
		select goods_id,(select user_id seller_id,goods_title from goods g where g.goods_id=i.goods_id),buyer_id 
		from in_face_trading i
		where goods_title like #{searchWord}
		order by trading_date desc
	</select>
	
	<select id="getSearchIdInfacePurchaseList" parameterType="string">	<!-- 33P 직거래 조회 상품ID(관리자) -->
		select goods_id,(select user_id seller_id,goods_title from goods g where g.goods_id=i.goods_id),buyer_id 
		from in_face_trading i
		where goods_id like #{searchWord}
		order by trading_date desc
	</select>
	<select id="getSearchUserInfacePurchaseList" parameterType="string">	<!-- 33P 직거래 조회 회원ID(관리자) -->
		select goods_id,goods_title,seller_id,buyer_id
		from in_face_trading
		where seller_id like #{searchWord}
		order by trading_date desc
	</select>
	
	<select id="getInfaceTradingInfo" parameterType="string">	<!-- 34P 직거래 세부조회 새로운 INDEX생성필요 -->
		select inface_trading_id,goods_id,seller_id,buyer_id,price,trading_date,trading_status
		from in_face_trading join goods using (goods_id)
		where IN_FACE_TRADING_ID = #{inFaceTradingId}
	</select>
	
	<select id="GetSafeTradingList">	<!-- 35P 안전거래조회(관리자) -->
		select transaction_id,title goods_title,seller_id,trading_status
		from safe_trading join goods using (goods_id)
		order by trading_date desc
	</select>
	
	<select id="getSearchSafeTradingList" parameterType="string"><!-- 35P 안전거래조회(관리자) 검색(안전거래번호) -->
		select transaction_id,title goods_title,user_id seller_id,trading_status
		from safe_trading join goods using (goods_id)
		order by trading_date desc
		where transaction_id=#{searchWord}
	</select>
		<select id="getSearchSafeTradingList" parameterType="string"><!-- 35P 안전거래조회(관리자) 검색(판매자ID) -->
		select transaction_id,title goods_title,user_id seller_id,trading_status
		from safe_trading join goods using (goods_id)
		order by trading_date desc
		where user_id=#{searchWord}
	</select>
	<select id="getSearchSafeTradingList" parameterType="string"><!-- 35P 안전거래조회(관리자) 검색(상품명) -->
		select transaction_id,title goods_title,user_id seller_id,trading_status
		from safe_trading join goods using (goods_id)
		order by trading_date desc
		where title=#{searchWord}
	</select>
	<select id="getSafeTradingInfo">	<!-- 36P 안전거래 세부조회(관리자) -->
		select s.transaction_id, g.user_id seller_id, s.perchase_method, s.buyer_id, g.title, s.price, s.shipping_address, trading_date, tracking_number
		from safe_trading join goods using (goods_id)
		where transaction_id = #{transactionId}
	</select>
	
	<select id="adminGetUserList"> <!-- 37P 회원정보조회 LIST 신고상위 --> <!-- 인덱스필요 -->
		select user_id,name,invite_count,
		(select count(*) report_count	<!-- 신고당한횟수 -->
		from
		(
		select user_id
		from community_report join community on ref_id=community_id	<!-- 커뮤니티 신고 -->
		union 
		select user_id 
		from comment_report join comment on ref_id=comment_id	<!-- 댓글 신고 -->
		union 
		select user_id 
		from goods_report join goods on ref_id=goods_id			<!-- 상품 신고 -->
		)rp
		where u.user_id=rp.user_id
		),
		(select count(*) trade_count from	<!-- 거래횟수 -->
		(
		 select buyer_id user_id	<!-- 직거래 구매 -->
		 from in_face_trading
		 union
		 select buyer_id user_id	<!-- 안전거래 구매 -->
		 from safe_trading 
		 union 
		 select user_id from goods join safe_trading using (goods_id) <!-- 안전거래 판매 -->
		 union 
		 select user_id from goods join in_face_trading using (goods_id) <!-- 직거래 판매 -->
		) tc
		where u.user_id=tc.user_id
		)
		from user u
		order by report_count
	</select>
	
		<select id="adminGetUserList"> <!-- 37P 회원정보조회 LIST --> <!-- 인덱스필요 -->
		select user_id,name,invite_count,
		(select count(*) report_count	<!-- 신고당한횟수 -->
		from
		(
		select user_id
		from community_report join community on ref_id=community_id	<!-- 커뮤니티 신고 -->
		union 
		select user_id 
		from comment_report join comment on ref_id=comment_id	<!-- 댓글 신고 -->
		union 
		select user_id 
		from goods_report join goods on ref_id=goods_id			<!-- 상품 신고 -->
		)rp
		where u.user_id=rp.user_id
		),
		(select count(*) trade_count from	<!-- 거래횟수 -->
		(
		 select buyer_id user_id	<!-- 직거래 구매 -->
		 from in_face_trading
		 union
		 select buyer_id user_id	<!-- 안전거래 구매 -->
		 from safe_trading 
		 union 
		 select user_id from goods join safe_trading using (goods_id) <!-- 안전거래 판매 -->
		 union 
		 select user_id from goods join in_face_trading using (goods_id) <!-- 직거래 판매 -->
		) tc
		where u.user_id=tc.user_id
		)
		from user u
		order by trade_count
	</select>
	
	<select id="adminGetUserInfo" parameterType="string">	<!-- 38P 회원정보 세부조회(관리자) -->
		select name,nickname,address,mobile_number,created_at,activate_status,
		
		(select count(*) 		<!-- 안전거래횟수 -->
		from(
		select buyer_id user_id from safe_trading
		union
		select user_id from goods join safe_trading using (goods_id)  
		) sf
		where sf.user_id=u.user_id
		) safe_trading_count,
		
		(select count(*) 		<!-- 직거래 횟수 -->
		from(
		select buyer_id user_id from in_face_trading
		union
		select user_id from goods join in_face_trading using (goods_id)  
		) i
		where i.user_id=u.user_id
		) in_face_trading_count,
		
		(select count(*) comment_report_count from (	<!-- 댓글 신고횟수 -->
		select user_id uid1 from
		comment_report r1 join community c1 on c1.comment_id=r1.refId
		where uid1=u.userId
		),
		(select count(*) community_report_count from (	<!-- 커뮤니티 신고횟수 -->
		select user_id uid2 from
		community_report r2 join community c2 on c2.board_id=r2.refId
		where uid2=u.userId
		),
		(select count(*) goods_report_count from (	<!-- 상품글 신고횟수 -->
		select user_id uid3 from
		goods_report r3 join goods g on g.goods_id=r3.refId
		where uid3=u.userId
		),
		from user u
		where user_id=#{user_id}
	</select>

	
	<update id="adminBanUser" parameterType="string">	<!-- 38P 계정 정지 유저 -->
		update user set enabled = 0 where user_id = #{userId}
	</update>
	
	<insert id="adminInsertBanUser"	parameterMap="UserBlockingDto">	<!-- 계정정지 테이블에 아이디추가 테이블과 Dto확인 -->
		insert into User_Blocking values(#{bannedId},#{administerId},#{reasonForBlocking},"",#{refId},#{reportClass})
	</insert>
	
	<insert id="adminInsertBanUser"	parameterMap="UserBlockingDto">	<!-- 계정정지 테이블에 아이디추가 테이블과 Dto확인 -->
		insert into User_Blocking values(#{bannedId},#{administerId},#{reasonForBlocking},"",#{refId},#{reportClass})
	</insert>
	
</mapper>
