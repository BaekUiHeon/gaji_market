<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="notification">

	<update id="updateNotiYN" parameterType="map"> <!-- 알림 클릭시 알림 읽음상태로 전환 -->
		update notification set read_yn='Y' where noti_id=#{notiId} and user_id=#{userId}
	</update>
	
	<select id="countNotification" parameterType="map" resultType="_int">	<!-- 2P 알림갯수 -->
		select count(*) from notification where user_id=#{userId} and read_yn='N' and type=#{type}
	</select>
	 
	<insert id="insertNoti" parameterType="InsertNotificationDto">	<!-- 알림생성 -->
		insert into notification values(noti_id_sequence.nextval, #{buyerId}, #{message},default,#{type}, #{referenceId},default)
	</insert>
	
		<insert id="insertSellerNoti" parameterType="InsertNotificationDto">	<!-- 알림생성 -->
		insert into notification values(noti_id_sequence.nextval,#{sellerId}, #{message},default,#{type}, #{referenceId},default)
	</insert>
	
	<select id="getNoticeList" resultType="NotificationDto" parameterType="map"> <!-- 18P해당계정의 거래알림 -->
		select list2.* from(
		(select list1.*,rownum rn from
		(select noti_id,message,read_yn,type,reference_id,to_char(created_at,'YYYY-MM-DD HH24:MI:SS') created_at 
		from notification where type=#{type} and user_id=#{userId}
		order by created_at desc) list1) list2)
		where rn between #{startRownum} and #{endRownum}
	</select>
	
	<select id="getIdFromTransactionId"	parameterType="string" resultType="string">
		select buyer_id from safe_trading where transaction_id = #{transactionId}
	</select>
	
	<select id="getTotalCnt" parameterType="string" resultType="_int">
		select count(*) from notification where user_id = #{userId} and type=2
	</select>
	
<delete id="deleteNotice" parameterType="kh.spring.gaji.notification.model.dto.DeleteNotiDto">
    DELETE FROM notification 
    WHERE user_Id = #{userId}
    AND noti_id IN (
        <if test="notiId != null">
            #{notiId}<if test="notiId1 != null or notiId2 != null or notiId3 != null or notiId4 != null or notiId5 != null">, </if>
        </if>
        <if test="notiId1 != null">
            #{notiId1}<if test="notiId2 != null or notiId3 != null or notiId4 != null or notiId5 != null">, </if>
        </if>
        <if test="notiId2 != null">
            #{notiId2}<if test="notiId3 != null or notiId4 != null or notiId5 != null">, </if>
        </if>
        <if test="notiId3 != null">
            #{notiId3}<if test="notiId4 != null or notiId5 != null">, </if>
        </if>
        <if test="notiId4 != null">
            #{notiId4}<if test="notiId5 != null">, </if>
        </if>
        <if test="notiId5 != null">
            #{notiId5}
        </if>
    )
</delete>
	
</mapper>

	<!-- <select id="getCommentNotice" resultType="NotificationDto" > 18P해당계정의 댓글알림
		select noti_id,message,read_yn,type,reference_id,created_at from notification where type=1 and user_id=#{userId}
	</select>
	
	<select id="getKeywordNotice" resultType="NotificationDto" > 18P해당계정의 키워드알림
		select noti_id,message,read_yn,type,reference_id,created_at from notification where type=2 and user_id=#{userId}
	</select> -->