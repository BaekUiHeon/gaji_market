<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="user">

	<select id="getProfile" parameterType="string" resultType="UserDto">	<!-- 프로필을 가져올때 유저주소 전부를 가져옴 -->
		select name,rating_score,nickname,mobile_number,(select address from user_address ad where ad.user_id=us.user_id) from user us where user_id=#{userId}
	</select>
	
	<update id="updateMainAddressNo" parameterType="string">	<!-- 대표주소를 변경하기위해 주소순서를 하나씩 뒤로 민다 -->
		update user_address set address_no=address_no+1 from USER_ADDRESS where user_id=#{user_id}
	</update>
	
	<update id="updateMainAddress" parameterType="map">	<!--주소순서를 1로 바꿈으로써 대표주소 변경 -->
		update user_address set address_no=1 from user_address where user_id=#{user_id} and address_no=#{addressNo}+1
	</update>
	
	<insert id="insertAddress" parameterType="UserAddressDomain">	<!-- 새로입력된 주소를 count+1 주소순서에 추가한다 -->
		insert into user_address values(#{address},#{detailAddress},#{userId},#{postCode},#{nickname},(select count(*) from user_address where user_id=#{user_id})+1)
	</insert>
	
	<delete id="deleteAddress1" parameterType="_int">	<!-- 주소삭제 1단계 작업 -->
		delete from user_address where post_code=#{postCode}
	</delete>
	
<!-- 	<update id="deleteAddress2" parameterType="_int">	주소삭제 2단계 작업
		update user_address set post_code=post_code-1 where post_code < #{postCode}
	</update>
	 -->
	<select id="checkNickname" parameterType="string" resultType="_int">	<!-- 7P 닉네임 중복검사 -->
		select count(*) from user where nickname=#{nickname}
	</select>
	
	<select id="checkEmail" parameterType="string" resultType="_int">		<!-- 7P 이메일 중복검사 -->
		select count(*) from user where email=#{email} 
	</select>
	
	<select id="checkPass" parameterType="string" resultType="string" >		<!-- 8P 패스워드를 가져온다 (패스워드 변경또는 로그인시 사용)-->
		select password from user where user_id=#{userId}					<!-- 13P 없으면 아이디틀림, 있는데 컨트롤러에서 검사시 다르면 비밀번호틀림 -->
	</select>
	<update id="updateInviteCount" parameterType="string">	<!-- 8P 로그인시 방문횟수 + 1 -->
		update user set invite_count=invite_count+1 where user_id=#{user_id}
	</update>
	<update id="updatePass" parameterType="map">							<!-- 8P 패스워드를 변경한다 -->
		update user set password=#{password} where user_id=#{userId}
	</update>
	
	<select id="checkId" parameterType="string" resultType="_int">	<!-- 아이디 중복검사 -->
		select count(*) from user where user_id=#{user_id}
	</select>
	
	<select id="checkMobileNumber" parameterType="string" resultType="_int">	<!-- 7P 전화번호 중복검사 -->
		select count(*) from user where mobile_number=#{mobileNumber}
	</select>
	
	<insert id="signup"> <!-- 회원가입 -->
		insert into (user user_id,name,password,mobile_number,nickname,email) values(#{user_id},#{name},#{password},#{mobile_number},#{nickname},#{email})
	</insert>
	
	<select id="findId" parameterType="map" resultType="string"> <!-- 15P 아이디 찾기 -->
		select user_id from user where name=#{name} and email=#{email}
	</select>
	
	<update id="findPass" parameterType="map"> <!-- 16P 비밀번호찾기 -->
		update user set password=#{password} where user_id=#{userId} and name=#{name}
	</update>
	<!-- 이메일 인증 미구현 -->
	
	
	<insert id="addAccount"> <!-- 계좌등록 -->
		insert into user_account (user_account,user_id) values(#{userAccount},#{userId})
	</insert>
	
	<insert id="addFavoriteUser" parameterType="map">	<!-- 유저 즐겨찾기 -->
		insert into favorite_user values(#{userId},#{targetId})
	</insert>
	
</mapper>
