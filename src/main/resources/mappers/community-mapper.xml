<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="community">
	<select id="getBoardList" parameterType="string" resultType="CommunityLikeDomain">	<!-- 27P 커뮤니티글 리스트 -->
		select c.board_id,c.title,c.writer,c.title,c.created_at,c.view_count,count(c.board_id) as like_count 
		from community c left join tbl_like l using (board_id) 
		where activate_status='Y' and dong_id=#{dongId}
		group by c.board_id,c.writer,c.title,c.created_at,c.view_count
		order by c.created_at desc
	</select>
	<select id="getSearchTitleBoardList" parameterType="map" resultType="CommunityLikeDomain">	<!-- 27P 커뮤니티글 제목검색 리스트 -->
		select c.board_id,c.writer,title,c.created_at,c.view_count,count(board_id) as like_count 
		from community c left join tbl_like l using (board_id)
		where title like #{searchWord} and activate_status='Y' and dong_id=#{dongId}
		group by c.board_id,c.writer,c.title,c.created_at,c.view_count
		order by c.created_at desc
	</select>
	<select id="getSearchNicknameBoardList" parameterType="map" resultType="CommunityLikeDomain">	<!-- 27P 커뮤니티글 글쓴이 리스트 -->
		select c.board_id,c.writer,c.title,c.created_at,c.view_count,count(board_id) as like_count 
		from community c left join tbl_like l using (board_id)
		where nickname like #{searchWord} and activate_status='Y' and dong_id=#{dongId}
		group by c.board_id,c.writer,c.title,c.created_at,c.view_count
		order by c.created_at desc
	</select>
	<select id="getSearchBoardList" parameterType="map" resultType="CommunityLikeDomain">	<!-- 27P 커뮤니티글 제목+글쓴이 검색 리스트 -->
		select c.board_id,c.writer,c.title,c.created_at,c.view_count,count(board_id) as like_count 
		from community c left join tbl_like l using (board_id)
		where (title like #{searchWord} or nickname like #{searchWord}) and c.activate_status='Y' and dong_id=#{dongId}
		group by c.board_id,c.title,c.writer,c.title,c.created_at,c.view_count
		order by c.created_at desc
	</select>
	
	<insert id="insertBoard" parameterType="CommunityDto" >	<!--28P 커뮤니티글 등록 -->
		insert into Community values(board_id_sequence.nextval,#{writer},#{dongId},#{title},#{content},"",0,#{lat},#{lng},"")
	</insert>
	
	<update id="updateBoard" parameterType="map" >	<!--29P 커뮤니티글 수정 -->
		update Community set 
		dong_id=#{dongId}, title=#{title}, content=#{content}, lat=#{lat}, lng=#{lng})
		where board_id=#{boardId}
	</update>
	
	<select id="getBoard" parameterType="_int" resultType="CommunityInfoDomain"> <!-- 30P 커뮤니티글 상세조회 -->
		select board_id,(select nickname from user where user_id = writer),
		writer,dong_id,title,content,created_at,view_count,lat,lng,
		(select count(*) like_count from tbl_like l where l.board_id=c.board_id)
		from community c
		where board_id=#{boardId}
	</select>
	
	<delete id="deleteComment" parameterType="_int"> <!-- 30P 댓글삭제 -->
		update comment set active_status='N' where comment_id=#{commentId}
	</delete>
	
	<insert id="insertComment">	<!-- 30P 댓글입력 -->
		insert into comment (board_id,writer_id,content,step) 
		values(#{boardId},#{writerId},#{content},comment_step_sequence.nextval)
	</insert>
	
	<update id="updateComment" parameterType="map">	<!-- 30P 대댓글 입력을 위한 업데이트 -->
		update comment
		set step=step+1
		where board_id=#{boardId} and step>#{step}
	</update>
	
	<insert id="insertCoComment" parameterType="CommentDto"> <!-- 30P 대댓글 입력 -->
		insert into comment (comment_id,board_id,writer_id,content,ccidx,step,depth) 
		values(comment_id_sequence.nextval,#{boardId},#{writerId},#{content},#{commentId},#{step}+1,#{depth}+1)
	</insert>
	
	<select id="getComment" resultType="CommentDto"> <!-- 댓글가져오기 -->
		select comment_id,(select nickname from user where user_id=writer_id)
		depth,content,cidx,wdate
		from comment order by step asc
		where board_id = #{boardId}
	</select>
</mapper>
